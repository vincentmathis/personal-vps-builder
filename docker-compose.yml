version: "3.3"
services:
  traefik:
    image: ${TRAEFIK_DOCKER_IMAGE}
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=${TRAEFIK_API_INSECURE_ENABLED}"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      # This is for testing to prevent rate limit:
      #- "--certificatesResolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
      - "--certificatesResolvers.le.acme.storage=acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${BASE_DATA_LOCATION}/traefik/acme.json:/acme.json
    networks:
      - traefik-network

  nextcloud:
    image: ${NEXTCLOUD_DOCKER_IMAGE}
    container_name: nextcloud
    restart: always
    volumes:
      - ${BASE_DATA_LOCATION}/nextcloud:/var/www/html
    expose:
        - "8080"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_URL}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=le
      - traefik.http.routers.nextcloud.entrypoints=websecure
      - traefik.http.middlewares.nextcloud-redirect-web-secure.redirectscheme.scheme=https
      - traefik.http.routers.nextcloud-web.middlewares=nextcloud-redirect-web-secure
      - traefik.http.routers.nextcloud-web.rule=Host(`${NEXTCLOUD_URL}`)
      - traefik.http.routers.nextcloud-web.entrypoints=web
      - traefik.http.routers.nextcloud.middlewares=hsts@docker
      - traefik.http.middlewares.hsts.headers.stsSeconds=15552000
      - traefik.http.middlewares.hsts.headers.stsIncludeSubdomains=true
    environment:
      - MYSQL_DATABASE=${MARIADB_NEXTCLOUD_DATABASE}
      - MYSQL_USER=${MARIADB_NEXTCLOUD_USER}
      - MYSQL_PASSWORD=${MARIADB_NEXTCLOUD_PASSWORD}
      - MYSQL_HOST=database
      - TRUSTED_PROXIES=${TRAEFIK_IP}
    networks:
      - traefik-network
      - database-network
  
  database:
    image: ${MARIADB_DOCKER_IMAGE}
    container_name: database
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ${BASE_DATA_LOCATION}/database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_NEXTCLOUD_DATABASE}
      - MYSQL_USER=${MARIADB_NEXTCLOUD_USER}
      - MYSQL_PASSWORD=${MARIADB_NEXTCLOUD_PASSWORD}
    networks:
      - database-network
    logging:
        options:
            max-size: "100m"
            max-file: "10"

  cron:
    image: ${NEXTCLOUD_DOCKER_IMAGE}
    container_name: nextcloud-cron
    restart: always
    volumes:
      - ${BASE_DATA_LOCATION}/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - database
    networks:
      - database-network

  bitwarden:
    image: ${BITWARDEN_DOCKER_IMAGE}
    container_name: bitwarden
    restart: always
    volumes:
      - ${BASE_DATA_LOCATION}/bitwarden:/data
    expose:
      - "3012"
      - "80"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      - traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectScheme.permanent=true
      - traefik.http.routers.bitwarden-ui-https.rule=Host(`${BITWARDEN_URL}`)
      - traefik.http.routers.bitwarden-ui-https.entrypoints=websecure
      - traefik.http.routers.bitwarden-ui-https.tls=true
      - traefik.http.routers.bitwarden-ui-https.tls.certresolver=le
      - traefik.http.routers.bitwarden-ui-https.service=bitwarden-ui
      - traefik.http.routers.bitwarden-ui-http.rule=Host(`${BITWARDEN_URL}`)
      - traefik.http.routers.bitwarden-ui-http.entrypoints=web
      - traefik.http.routers.bitwarden-ui-http.middlewares=redirect-https
      - traefik.http.routers.bitwarden-ui-http.service=bitwarden-ui
      - traefik.http.services.bitwarden-ui.loadbalancer.server.port=80
      - traefik.http.routers.bitwarden-websocket-https.rule=Host(`${BITWARDEN_URL}`) && Path(`/notifications/hub`)
      - traefik.http.routers.bitwarden-websocket-https.entrypoints=websecure
      - traefik.http.routers.bitwarden-websocket-https.tls=true
      - traefik.http.routers.bitwarden-websocket-https.tls.certresolver=le
      - traefik.http.routers.bitwarden-websocket-https.service=bitwarden-websocket
      - traefik.http.routers.bitwarden-websocket-http.rule=Host(`${BITWARDEN_URL}`) && Path(`/notifications/hub`)
      - traefik.http.routers.bitwarden-websocket-http.entrypoints=web
      - traefik.http.routers.bitwarden-websocket-http.middlewares=redirect-https
      - traefik.http.routers.bitwarden-websocket-http.service=bitwarden-websocket
      - traefik.http.services.bitwarden-websocket.loadbalancer.server.port=3012
    environment:
      WEBSOCKET_ENABLED: 'true' # Required to use websockets
      TZ: 'Europe/Berlin'
    networks:
      - traefik-network

networks:
  traefik-network:
    external:
      name: traefik-network
  database-network:
    external:
      name: database-network
